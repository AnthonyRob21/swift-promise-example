{"name":"Swift-promise-example","tagline":"Shared Static Library by Cross-compilation via RemObjects Silver (Fire IDE)","body":"In the github sample project\r\n\r\nhttps://github.com/loretoparisi/swift-promise-example\r\n\r\nI'm building an iOS app and Android app that shares core logic through a Silver Shared Project written in Swift.\r\n\r\nThis project originally was intended to port a Promise/Future programming style to Swift, but now is evolved through the amazing RemObjects Fire IDE project pretty much like a shared library to build cross platforms core logic libraries (Http, I/O, File System, Database).\r\n\r\nYou can find in the repo:\r\n\r\nA Shared Project in Silver / Swift code (2.1 supported on latest Fire Beta 8.3.92)\r\nA iOS target, to build a static ARMv7/ARM64 library\r\nA Android target to build Android-19 jars.\r\nA (Xcode project) iOS Sample app (CrossTest). This is intended like a playground for Swift code and ObjC bridging as well as the iOS app that shares the static library;\r\nA Android Sample app (AndroidStudio project), to test the shared jar libraries build in Swift.\r\nI would like to share this solution since some achievements were done until now:\r\n\r\nThe Promise example (Swift 2.1) is now almost compiling in latest Fire Beta / Sugar development tree. See http://talk.remobjects.com/t/fire-8-3-92-beta-error-e0-internal-error-an-item-with-the-same-key-has-already-been-added/7730/42 for more details;\r\nThe Sugar project (development tree) now compiles in MacOS X ( see http://talk.remobjects.com/t/compile-sugar-sln-on-fire-macosx/7857/7 )\r\nSo far I was able to\r\n\r\nPerform HTTP calls in both iOS and Android targets;\r\nCreate a Database through Sugar.Data iOS target;\r\nThe Promise runs only in Xcode/Swift 2.1. It will be able to run in Fire very soon (See previous note).\r\nTodos:\r\n- Database support in Android target through Sugar.Data (See issues below).\r\n\r\nIssues:\r\n- Currently I'm facing some issues on Sugar.Data / Android target:","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}